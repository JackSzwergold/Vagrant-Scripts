Vagrant.configure(2) do |config|

  config.ssh.username = "vagrant"
  config.vm.box = "ubuntu/trusty64"
  config.vm.box_check_update = false
  config.vm.network "private_network", ip: "192.168.56.20"
  config.vm.hostname = "vagrant"

  config.vm.provider :virtualbox do |v|
    v.customize ["modifyvm", :id, "--memory", 512]
    v.customize ["modifyvm", :id, "--cpus", 1]
    # v.customize ["modifyvm", :id, "--name", "Vagrant"]
    v.name = "Vagrant (Ubuntu 14.04; Base)"
  end

  # Shell script to provision the server.
  # config.vm.provision :shell, :path => "provision.sh"
  config.vm.provision "shell", inline: <<-SHELL

    # Setting the 'DEBIAN_FRONTEND' to a non-interactive mode.
    export DEBIAN_FRONTEND=noninteractive

    # Create the 'www-readwrite' group.
    sudo groupadd -f www-readwrite

    # Set the Vagrant userâ€™s main group to be the 'www-readwrite' group.
    sudo usermod -g www-readwrite vagrant

    # Sync with the time/date server.
    sudo ntpdate ntp.ubuntu.com

    # Set the time zone data.
    # debconf-set-selections <<< "tzdata tzdata/Areas select America"
    # debconf-set-selections <<< "tzdata tzdata/Zones/America select New_York"
    # sudo dpkg-reconfigure tzdata
    echo 'America/New_York' > /etc/timezone
    dpkg-reconfigure -f noninteractive tzdata

    # Edit the 'sources.list' to enable partner package updates.
    if [ -e "/etc/apt/sources.list" ]; then
      sudo sed -i '/^#.*deb.*partner$/s/^# //g' "/etc/apt/sources.list"
    fi

    # Install 'sysstat'.
    sudo aptitude install -y --assume-yes -q sysstat

    # Enable 'sysstat'.
    if [ -e "/etc/default/sysstat" ]; then
      sudo sed -i 's/ENABLED="false"/ENABLED="true"/g' "/etc/default/sysstat";
    fi

    # Restart 'sysstat'.
    sudo service sysstat restart

    # Add the user to the 'www-readwrite' group:
    sudo adduser vagrant www-readwrite

    # Install Avahi daemon stuff.
    sudo aptitude install -y --assume-yes -q avahi-daemon avahi-utils

    # Install generic tools.
    sudo aptitude install -y --assume-yes -q \
	  dnsutils traceroute nmap bc htop finger curl whois rsync lsof \
	  iftop figlet lynx mtr-tiny iperf nload zip unzip attr sshpass \
	  dkms mc elinks ntp dos2unix p7zip-full nfs-common imagemagick \
	  slurm sharutils uuid-runtime chkconfig quota pv trickle apachetop

    # Install and update the locate database.
	sudo aptitude install -y --assume-yes -q locate
	sudo updatedb

    # Install the core compiler and built options.
    sudo aptitude install -y --assume-yes -q build-essential

    # Install Git via PPA.
    sudo aptitude install -y --assume-yes -q python-software-properties
    sudo add-apt-repository -y ppa:git-core/ppa
    sudo aptitude update -y --assume-yes -q
    sudo aptitude upgrade -y --assume-yes -q
    sudo aptitude install -y --assume-yes -q git git-core subversion git-svn

    # Install postfix and general mail stuff.
    debconf-set-selections <<< "postfix postfix/mailname string vagrant.local"
    debconf-set-selections <<< "postfix postfix/main_mailer_type string 'Internet Site'"
    sudo aptitude install -y --assume-yes -q postfix mailutils

    # Set the server login banner with figlet.
    figlet "Vagrant" > "/etc/motd"

    # Set the default UMASK value in 'login.defs' to be 002 instead of 022.
    if [ -e "/etc/pam.d/common-session" ]; then
      sudo sed -i 's/UMASK[ \t]*022/UMASK\t\t002/g' "/etc/login.defs";
    fi

    # Set the default UMASK value in 'common-session' to be 002 instead of 022.
    if [ -e "/etc/pam.d/common-session" ]; then
      sudo sed -i 's/session optional[ \t]*pam_umask\.so/session\soptional\t\tpam_umask\.so\t\tumask=0002/g' "/etc/pam.d/common-session";
    fi

    # Fix for slow SSH client connections.
    if [ -e "/etc/ssh/ssh_config" ]; then
      sudo echo "    PreferredAuthentications publickey,password,gssapi-with-mic,hostbased,keyboard-interactive" >> "/etc/ssh/ssh_config";
    fi

    # Install IPTables and IPSet stuff.
    debconf-set-selections <<< "iptables-persistent iptables-persistent/autosave_v4 boolean true"
    debconf-set-selections <<< "iptables-persistent iptables-persistent/autosave_v6 boolean true"
    sudo aptitude install -y --assume-yes -q iptables iptables-persistent ipset

    # Get rid of the symbolic link to `50-landscape-sysinfo` and similar for cloud installs.
	if [ -e "/etc/update-motd.d/50-landscape-sysinfo" ]; then sudo rm -f /etc/update-motd.d/50-landscape-sysinfo; fi
	if [ -e "/etc/update-motd.d/51-cloudguest" ]; then sudo rm -f /etc/update-motd.d/51-cloudguest; fi

    # Comment out the content of these MOTD scripts:
    if [ -e "/etc/update-motd.d/90-updates-available" ]; then sudo sed -i '/^#/!s/\(.*\)/# \1/g' "/etc/update-motd.d/90-updates-available"; fi
    if [ -e "/etc/update-motd.d/91-release-upgrade" ]; then sudo sed -i '/^#/!s/\(.*\)/# \1/g' "/etc/update-motd.d/90-updates-available"; fi
    if [ -e "/etc/update-motd.d/95-hwe-eol" ]; then sudo sed -i '/^#/!s/\(.*\)/# \1/g' "/etc/update-motd.d/90-updates-available"; fi

  SHELL
end
