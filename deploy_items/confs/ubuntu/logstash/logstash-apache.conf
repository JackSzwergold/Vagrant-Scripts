input {

  file {
    path => "/home/vagrant/deploy_items/data/dump_logstash_data/access_log*"
    start_position => "beginning"
  }

}

filter {

  if [path] =~ "access" {

    mutate {
      replace => {
        "type" => "apache_access"
      }
    }

    grok {
      match => {
        "message" => "%{COMBINEDAPACHELOG}"
      }
    }

    urldecode {
      all_fields => true
    }

    kv {
      source => "request"
      field_split => "&?"
      allow_duplicate_values => false
      exclude_keys => [ "_" ]
      prefix => "extra_"
    }

    prune {
      whitelist_names => [ "clientip", "referrer", "bytes", "agent", "response", "request", "ident", "host", "httpversion", "message", "verb",  "auth" ]
      whitelist_names => [ "stuff" ]
    }

    grok {
      match => {
        "request" => [
          "/courses/%{WORD:extra_one}/%{INT:extra_two}",
          "/courses/%{WORD:extra_one}"
        ]
      }
      tag_on_failure => []
    }

    mutate {
      convert => {
        "bytes" => "integer"
        "response" => "integer"
      }
    }

    if [extra_stuff] =~ /.+/ {
      mutate {
        add_field => { "extra_three" => "%{[extra_stuff]}" }
        remove_field => [ "extra_stuff" ]
      }
    }

    geoip {
      source => "clientip"
    }

    fingerprint {
      source => "message"
      target => "[@metadata][fingerprint]"
      method => "MURMUR3"
    }

  }

  date {
    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
  }

}

output {

  elasticsearch {
    hosts => ["localhost:9200"]
    index => "logstash-apache"
    document_id => "%{[@metadata][fingerprint]}"
    manage_template => false
    template => "/home/vagrant/deploy_items/confs/ubuntu/logstash/logstash-apache.json"
    template_name => "logstash-apache"
    template_overwrite => true
  }

  stdout {
    codec => rubydebug
  }

}
